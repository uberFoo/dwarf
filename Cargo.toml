[package]
name = "dwarf"
version = "0.8.1"
authors = ["Keith T. Star <uberfoo@me.com>"]
categories = ["compilers", "command-line-interface"]
description = "A Rust-like, typed, interpreted programming language"
documentation = "https://uberfoo.github.io/assets/docs/dwarf/introduction.html"
homepage = "https://uberfoo.github.io/assets/docs/dwarf/introduction.html"
include = [
    "build.rs",
    "src/**/*.rs",
    "README.md",
    "CHANGELOG.md",
    "LICENSE-APACHE",
    "LICENSE-MIT",
]
keywords = ["dwarf", "language", "interpreter", "compiler"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/uberfoo/dwarf"
edition = "2021"

[[bin]]
name = "dwarfc"
path = "src/bin/dwarfc.rs"

[[bin]]
name = "dwarf"
path = "src/bin/main.rs"

[[bin]]
name = "dwarfdb"
path = "src/bin/tui.rs"

[dependencies]
abi_stable = "0.11.2"
ansi_term = "0.12.1"
ansi-to-tui = { git = "https://github.com/uberFoo/ansi-to-tui" }
async-compat = { version = "0.2.3", optional = true }
async-condvar-fair = { version = "1.0.0", features = ["smol"], optional = true }
async-executor = { version = "1.6.0", optional = true }
async-io = { version = "2.2.0", optional = true }
async-task = { version = "4.5.0", optional = true }
ariadne = { git = "https://github.com/uberFoo/ariadne" }
backtrace = "0.3.67"
bincode = "1.3.3"
cfg-if = "1.0.0"
chumsky = "0.9.3"
circular-queue = "0.2.6"
clap = { version = "4.2.2", features = ["derive"] }
color-backtrace = "0.6.0"
core_extensions = { version = "1.5.3", default-features = false, features = [
    "std",
] }
crossbeam = { version = "0.8.2", features = ["crossbeam-channel"] }
crossterm = "0.27.0"
dap = "0.2.0-alpha1"
env_logger = "0.10.0"
futures-lite = { version = "2.0.0", optional = true }
heck = "0.4.1"
hyper = { version = "1.1.0", optional = true }
lazy_static = "1.4.0"
log = "0.4.18"
no_deadlocks = { git = "https://github.com/uberFoo/no-deadlocks", optional = true }
num_cpus = "1.16.0"
num-format = "0.4.4"
once_cell = { version = "1.18.0" }
parking_lot = { version = "0.12.1", features = [
    "send_guard",
    "serde",
    "hardware-lock-elision",
] }
pretty_env_logger = "0.5.0"
puteketeke = { version = "0.0.4", optional = true }
ratatui = { git = "https://github.com/uberFoo/ratatui", optional = true }
reqwest = { version = "0.11.18", features = ["blocking", "rustls-tls"] }
rustc-hash = "1.1.0"
rustyline = { version = "13.0.0", optional = true, features = [
    "derive",
    "with-file-history",
] }
sarzak = { git = "https://github.com/uberFoo/sarzak", branch = "develop", default-features = false, features = [
    "sarzak-rwlock",
] }
serde = { version = "1.0.160", features = ["derive", "rc"] }
serde_json = "1.0.96"
slab = "0.4.9"
smol = { version = "2.0.0", optional = true }
snafu = "0.8.0"
syntect = { version = "5.0.0", optional = true }
test-log = { version = "0.2.14", features = ["tracing-subscriber"] }
threadpool = "1.8.1"
tracing = { version = "0.1.40" }
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
tracy-client = { version = "0.17.0", optional = true }
tracy-client-sys = "0.22.0"
tracing-tracy = "0.11.0"
tui-input = { version = "0.8.0", optional = true }
tui-logger = { git = "https://github.com/uberFoo/tui-logger", optional = true, default-features = false, features = [
    "ratatui-support",
] }
tui-textarea = { git = "https://github.com/uberFoo/tui-textarea", optional = true, features = [
    "ratatui-crossterm",
] }
tui-tree-widget = { git = "https://github.com/uberFoo/tui-rs-tree-widget", optional = true }
unicode-segmentation = "1.10.1"
uuid = { version = "1.6.1", features = ["v4", "serde"] }

smartstring = { version = "1.0.1", features = ["serde"] }
regex = "1.10.3"
bitcode = "0.5.1"

# [patch.crates-io]
# puteketeke = { path = "../../github/puteketeke" }

# [patch."https://github.com/uberFoo/sarzak"]
# sarzak = { path = "../sarzak" }

[dev-dependencies]
backtrace = "0.3.67"
criterion = { version = "0.5.1", features = ["html_reports"] }
diff = "0.1.13"

[build-dependencies]
chrono = "0.4.31"
walkdir = "2.3.3"

[features]
default = ["async-executor"]
single = ["single-vec", "repl", "print-std-out"]
debug = ["sarzak/lu-dog-rc", "repl", "print-std-out"]
nd-executor = ["multi-nd-vec", "repl", "print-std-out", "async"]
async-executor = ["multi-vec", "repl", "print-std-out", "async"]

tracy-client = ["dep:tracy-client"]

tui = [
    "dep:tui-input",
    "dep:tui-logger",
    "dep:tui-textarea",
    "dep:tui-tree-widget",
    "dep:ratatui",
    "dep:syntect",
]

repl = ["dep:rustyline"]

tracy = [
    "tracy-client/enable",
    "tracy-client/system-tracing",
    "tracy-client/context-switch-tracing",
    "tracy-client/sampling",
    "tracy-client/code-transfer",
    "tracy-client/broadcast",
    "dep:tracy-client",
]


single-vec = ["sarzak/lu-dog-vec"]
single-vec-tracy = ["sarzak/lu-dog-vec-tracy", "dep:tracy-client"]
multi-vec = ["sarzak/lu-dog-rwlock-vec"]
pl-vec = ["sarzak/lu-dog-pl-vec"]
multi-nd-vec = ["sarzak/lu-dog-ndrwlock-vec", "dep:no_deadlocks"]

print-std-out = []

async = [
    "dep:smol",
    "dep:futures-lite",
    "dep:async-executor",
    "dep:async-io",
    "dep:puteketeke",
    "dep:async-compat",
    "dep:async-condvar-fair",
]

[[bench]]
name = "dwarf"
harness = false

[profile.release]
lto = "thin"
codegen-units = 1
panic = "abort"

[profile.dev]
debug = 0

[lib]
crate-type = ["cdylib", "rlib"]
