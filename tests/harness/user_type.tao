/// Test user defined types
///
struct Foo {
    a: int,
    b: bool,
    c: float,
    d: string,
    e: Uuid,
}

fn main() -> bool {
    let f = Foo {
        a: 42,
        b: true,
        c: 3.14,
        d: "Hello uberFoo.",
    };
    let g = Foo {
        a: 42,
        b: true,
        c: 3.14,
        d: "Hello uberFoo.",
    };
    let h = f;

    // For now we need to cast the assert_eq to bool, since the extruder
    // doesn't know anything about the assert_eq function.
    let a: bool = chacha::assert_eq(f.a, 42) as bool;
    let b = chacha::assert_eq(f.b, true) as bool;
    let c = chacha::assert_eq(f.c, 3.14) as bool;
    let d = chacha::assert_eq(f.d, "Hello uberFoo.") as bool;

    // This one I'm not sure about. I'm tending towards false, as it's a
    // different instance.
    let e = chacha::assert_eq(f, g) as bool;

    // This one should certainly be true.
    let i = chacha::assert_eq(f, h) as bool;

    a && b && c && d && !e && i
}
