{"compiler_version":"0.8.0","compiler_build_ts":"2024-02-27T14:54:18.305607+00:00","symbols":{"STRING":{"ValueType":{"subtype":{"Ty":"eb75208b-bf2e-55f9-9a38-7c1553f31960"},"bogus":true,"id":3}}},"thonks":{"main":{"name":"main","instructions":[{"Push":{"Enumeration":{"Unit":[{"subtype":{"Enumeration":0},"bogus":true,"id":7},"::Option","None"]}}},{"StoreLocal":0},{"FetchLocal":0},{"Push":{"ValueType":{"subtype":{"Enumeration":0},"bogus":true,"id":7}}},{"Push":{"String":"::Option"}},{"Push":{"String":"None"}},{"NewTupleEnum":0},"TestEqual",{"JumpIfFalse":13},{"Push":{"String":"None\\n"}},{"Out":0},{"Push":{"Boolean":true}},{"Push":{"Boolean":true}},"TestEqual",{"JumpIfTrue":5},{"Push":{"String":"assertion failed: 172..201"}},{"Out":1},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":172,"end":201}}},"HaltAndCatchFire",{"Push":{"Integer":0}},{"Goto":"7d2acd6b-6364-4493-a3c5-7bb4e169ef1f"},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":103,"end":306}}},"HaltAndCatchFire",{"Label":"7d2acd6b-6364-4493-a3c5-7bb4e169ef1f"},{"StoreLocal":1},{"FetchLocal":1},{"Push":{"Integer":0}},"TestEqual",{"JumpIfTrue":5},{"Push":{"String":"assertion failed: 312..335"}},{"Out":1},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":312,"end":335}}},"HaltAndCatchFire",{"Push":{"String":"Hello world!"}},{"Push":{"ValueType":{"subtype":{"Enumeration":1},"bogus":true,"id":11}}},{"Push":{"String":"::Option"}},{"Push":{"String":"Some"}},{"NewTupleEnum":1},{"StoreLocal":0},{"FetchLocal":0},"Dup","ExtractEnumValue","Dup",{"StoreLocal":2},{"Push":{"ValueType":{"subtype":{"Enumeration":1},"bogus":true,"id":11}}},{"Push":{"String":"::Option"}},{"Push":{"String":"Some"}},{"NewTupleEnum":1},"TestEqual",{"JumpIfFalse":17},{"Push":{"String":"Some({0})\\n"}},{"MethodLookup":"format"},{"Push":{"String":"Some({0})\\n"}},{"FetchLocal":2},{"Call":2},{"Out":0},{"Push":{"Boolean":true}},{"Push":{"Boolean":true}},"TestEqual",{"JumpIfTrue":5},{"Push":{"String":"assertion failed: 493..522"}},{"Out":1},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":493,"end":522}}},"HaltAndCatchFire",{"Push":{"Integer":0}},{"Goto":"3dbb5824-9740-43eb-8375-309d9c3ddabd"},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":402,"end":627}}},"HaltAndCatchFire",{"Label":"3dbb5824-9740-43eb-8375-309d9c3ddabd"},{"StoreLocal":1},{"FetchLocal":1},{"Push":{"Integer":0}},"TestEqual",{"JumpIfTrue":5},{"Push":{"String":"assertion failed: 633..656"}},{"Out":1},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":633,"end":656}}},"HaltAndCatchFire",{"Push":{"Integer":42}},{"Push":{"ValueType":{"subtype":{"Enumeration":2},"bogus":true,"id":12}}},{"Push":{"String":"::Option"}},{"Push":{"String":"Some"}},{"NewTupleEnum":1},{"StoreLocal":2},{"FetchLocal":2},"Dup","ExtractEnumValue","Dup",{"StoreLocal":2},{"Push":{"ValueType":{"subtype":{"Enumeration":2},"bogus":true,"id":12}}},{"Push":{"String":"::Option"}},{"Push":{"String":"Some"}},{"NewTupleEnum":1},"TestEqual",{"JumpIfFalse":17},{"Push":{"String":"Some({0})\\n"}},{"MethodLookup":"format"},{"Push":{"String":"Some({0})\\n"}},{"FetchLocal":2},{"Call":2},{"Out":0},{"Push":{"Boolean":true}},{"Push":{"Boolean":true}},"TestEqual",{"JumpIfTrue":5},{"Push":{"String":"assertion failed: 879..908"}},{"Out":1},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":879,"end":908}}},"HaltAndCatchFire",{"FetchLocal":2},{"Goto":"e30cadeb-785d-495c-9637-6adc5ba7fdeb"},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":748,"end":1055}}},"HaltAndCatchFire",{"Label":"e30cadeb-785d-495c-9637-6adc5ba7fdeb"},{"StoreLocal":1},{"FetchLocal":1},{"Push":{"Integer":42}},"TestEqual",{"JumpIfTrue":5},{"Push":{"String":"assertion failed: 1061..1085"}},{"Out":1},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":1061,"end":1085}}},"HaltAndCatchFire",{"Push":{"Enumeration":{"Unit":[{"subtype":{"Enumeration":2},"bogus":true,"id":12},"::Option","None"]}}},{"StoreLocal":2},{"FetchLocal":2},{"Push":{"ValueType":{"subtype":{"Enumeration":2},"bogus":true,"id":12}}},{"Push":{"String":"::Option"}},{"Push":{"String":"None"}},{"NewTupleEnum":0},"TestEqual",{"JumpIfFalse":13},{"Push":{"String":"None\\n"}},{"Out":0},{"Push":{"Boolean":true}},{"Push":{"Boolean":true}},"TestEqual",{"JumpIfTrue":5},{"Push":{"String":"assertion failed: 1239..1268"}},{"Out":1},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":1239,"end":1268}}},"HaltAndCatchFire",{"FetchLocal":2},{"Goto":"49f56d94-9505-4187-9822-6f3e6c9012d0"},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":1173,"end":1415}}},"HaltAndCatchFire",{"Label":"49f56d94-9505-4187-9822-6f3e6c9012d0"},{"StoreLocal":1},{"FetchLocal":1},{"Push":{"Enumeration":{"Unit":[{"subtype":{"Enumeration":2},"bogus":true,"id":12},"::Option","None"]}}},"TestEqual",{"JumpIfTrue":5},{"Push":{"String":"assertion failed: 1421..1462"}},{"Out":1},{"Push":{"String":"if_let.tao"}},{"Push":{"Range":{"start":1421,"end":1462}}},"HaltAndCatchFire",{"Push":"Empty"},"Return"],"spans":[{"start":0,"end":0},{"start":0,"end":0},{"start":135,"end":136},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":153,"end":161},{"start":0,"end":0},{"start":190,"end":194},{"start":190,"end":194},{"start":172,"end":201},{"start":172,"end":201},{"start":172,"end":201},{"start":172,"end":201},{"start":0,"end":0},{"start":0,"end":0},{"start":172,"end":201},{"start":211,"end":212},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":330,"end":331},{"start":211,"end":212},{"start":312,"end":335},{"start":312,"end":335},{"start":312,"end":335},{"start":312,"end":335},{"start":0,"end":0},{"start":0,"end":0},{"start":312,"end":335},{"start":373,"end":387},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":350,"end":388},{"start":0,"end":0},{"start":135,"end":136},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":457,"end":470},{"start":0,"end":0},{"start":457,"end":470},{"start":432,"end":435},{"start":0,"end":0},{"start":0,"end":0},{"start":190,"end":194},{"start":190,"end":194},{"start":493,"end":522},{"start":493,"end":522},{"start":493,"end":522},{"start":493,"end":522},{"start":0,"end":0},{"start":0,"end":0},{"start":493,"end":522},{"start":211,"end":212},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":330,"end":331},{"start":211,"end":212},{"start":633,"end":656},{"start":633,"end":656},{"start":633,"end":656},{"start":633,"end":656},{"start":0,"end":0},{"start":0,"end":0},{"start":633,"end":656},{"start":691,"end":693},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":671,"end":694},{"start":0,"end":0},{"start":780,"end":781},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":457,"end":470},{"start":0,"end":0},{"start":457,"end":470},{"start":780,"end":781},{"start":0,"end":0},{"start":0,"end":0},{"start":190,"end":194},{"start":190,"end":194},{"start":879,"end":908},{"start":879,"end":908},{"start":879,"end":908},{"start":879,"end":908},{"start":0,"end":0},{"start":0,"end":0},{"start":879,"end":908},{"start":780,"end":781},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":330,"end":331},{"start":691,"end":693},{"start":1061,"end":1085},{"start":1061,"end":1085},{"start":1061,"end":1085},{"start":1061,"end":1085},{"start":0,"end":0},{"start":0,"end":0},{"start":1061,"end":1085},{"start":0,"end":0},{"start":0,"end":0},{"start":780,"end":781},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":153,"end":161},{"start":0,"end":0},{"start":190,"end":194},{"start":190,"end":194},{"start":1239,"end":1268},{"start":1239,"end":1268},{"start":1239,"end":1268},{"start":1239,"end":1268},{"start":0,"end":0},{"start":0,"end":0},{"start":1239,"end":1268},{"start":780,"end":781},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":0,"end":0},{"start":330,"end":331},{"start":0,"end":0},{"start":1421,"end":1462},{"start":1421,"end":1462},{"start":1421,"end":1462},{"start":1421,"end":1462},{"start":0,"end":0},{"start":0,"end":0},{"start":1421,"end":1462},{"start":0,"end":0},{"start":0,"end":0}],"frame_size":4}},"source":"enum Option<T> {\n    Some(T),\n    None,\n}\n\nfn main() {\n    let x = Option::<string>::None;\n    let z = if let Option::<string>::None = x {\n        print(\"None\\n\");\n        chacha::assert_eq(true, true);\n        0\n    } else {\n        print(\"Some\\n\");\n        chacha::assert_eq(true, false);\n        1\n    };\n    chacha::assert_eq(z, 0);\n\n    let x = Option::<string>::Some(\"Hello world!\");\n    let z = if let Option::<string>::Some(str) = x {\n        print(\"Some({0})\\n\".format(str));\n        chacha::assert_eq(true, true);\n        0\n    } else {\n        print(\"None\\n\");\n        chacha::assert_eq(true, false);\n        1\n    };\n    chacha::assert_eq(z, 0);\n\n    let y = Option::<int>::Some(42);\n    // let y = Option::Some::<int>(42);\n    let z = if let Option::<int>::Some(y) = y {\n        // if let Option::Some::<int>(y) = y {\n        print(\"Some({0})\\n\".format(y));\n        chacha::assert_eq(true, true);\n        y\n    } else {\n        print(\"None\\n\");\n        chacha::assert_eq(true, false);\n        // ðŸš§ This shouldn't typecheck.\n        // 0\n    };\n    chacha::assert_eq(z, 42);\n\n    let y = Option::<int>::None;\n    // let y = Option::Some::<int>(42);\n    let z = if let Option::<int>::None = y {\n        print(\"None\\n\");\n        chacha::assert_eq(true, true);\n        y\n    } else {\n        print(\"Some\\n\");\n        chacha::assert_eq(true, false);\n        // ðŸš§ This shouldn't typecheck.\n        // 0\n    };\n    chacha::assert_eq(z, Option::<int>::None);\n}\n"}